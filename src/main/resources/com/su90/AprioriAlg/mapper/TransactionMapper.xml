<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.su90.AprioriAlg.mapper.TransactionMapper">
	
	<sql id="cols">id,cid,tdate</sql>
	<sql id="cols_insert">cid,tdate</sql>

	<resultMap type="com.su90.AprioriAlg.domain.Transaction" id="transRM">		
		<id property="id" column="ID"/>		
                <result property="cid" column="CID"/>		
		<result property="tdate" column="TDATE"/>		
	</resultMap>
	
	<resultMap type="com.su90.AprioriAlg.domain.Transaction" extends="transRM" id="transItemsRM">		
		<collection property="items" ofType="com.su90.AprioriAlg.domain.Item">
			<id property="id" column="ITEMID"/>
			<result property="name" column="NAME"/>
		</collection>		
	</resultMap>
	
	<select id="find" parameterType="map" resultMap="transRM">
		select <include refid="cols"/> from transaction
		<where>
		<if test="id!=null">and id = #{id}</if>
                <if test="cid!=null">and cid = #{cid}</if>
		<if test="dateStart!=null">and tdate >= #{dateStart}</if>
		<if test="dateEnd!=null"><![CDATA[and tdate <=]]> #{dateEnd}</if>		
		</where>
	</select>
	
	<select id="findin" parameterType="int" resultMap="transRM">
		select <include refid="cols"/> from transaction
		where id in
		(
		<foreach collection="array" item="id" separator=",">
			#{id}	
		</foreach>
		)
	</select>
	
	<select id="get" parameterType="int" resultMap="transRM">
		select<include refid="cols"/>from transaction
		where id = #{id}
	</select>
	
	<insert id="insert" parameterType="com.su90.AprioriAlg.domain.Transaction">
		insert into transaction
		(<include refid="cols_insert"/>)
		values
		(#{cid},#{tdate})
	</insert>
	
	<update id="update" parameterType="com.su90.AprioriAlg.domain.Transaction">
		update transaction
		<set>
			<if test="tdate!=null">tdate=#{tdate},</if>			
                        <if test="cid!=null">cid=#{cid},</if>			
		</set>
		where id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="int">
		delete from transaction
		where id = #{id}
	</delete>
	
	<delete id="deleteArray" parameterType="int">
		delete from transaction 
		where id in
		(
		<foreach collection="array" item="id" separator=",">
			#{id}	
		</foreach>
		)
	</delete>
	
	<delete id="deleteList" parameterType="int">
		delete from transaction
		where id in
		<foreach collection="list" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
	<delete id="deleteMap" parameterType="map">
		delete from transaction
		where id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>		
	</delete>
	
	<select id="count" resultType="int">
		SELECT COUNT(*) FROM transaction
	</select>
	
	<select id="getTranswithItems" parameterType="int" resultMap="transItemsRM">
		select t.id as id,t.cid as cid t.tdate as tdate, i.id as itemid, i.name as name
		from transaction t join( trans_item it join item i)
		on t.id = #{id} and t.id = it.tid and it.iid = i.id;
	</select>
	
	<insert id="insertTranswithaItem" parameterType="map">
		insert into trans_item 
		(tid, iid) 
		values(#{tid},#{iid});
	</insert>
	
	<delete id="deleteTranswithaItem" parameterType="map">
		delete from trans_item
		where tid=#{tid} and iid = #{iid};
	</delete>
	
	<select id="countTranswithItemIds" parameterType="int" resultType="int">
		select count(*)
		from transaction t 
		where not exists(
			select i2.id
		    from item i2
		    where i2.id in
		    <foreach collection="list" item="id" open="(" close=")" separator=",">
				#{id}
			</foreach>		    
		    and i2.id not in (
				select ti3.iid
		        from trans_item ti3
		        where ti3.tid = t.id
		    )
		)
	</select>
	
	<select id="countTranswithItemNames" parameterType="string" resultType="int">
		select count(*)
		from transaction t 
		where not exists(
			select i2.id
		    from item i2
		    where i2.name in
		    <foreach collection="list" item="str" open="(" close=")" separator=",">
				#{str}
			</foreach>		    
		    and i2.id not in (
				select ti3.iid
		        from trans_item ti3
		        where ti3.tid = t.id
		    )
		)
	</select>

</mapper>